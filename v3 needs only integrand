import numpy as np
import scipy.integrate as sit
from scipy.integrate import tplquad

#integral_3(integral_2(integral_1(0, np.sqrt(1-x**2-y**2) ), 0, np.sqrt(1-x**2) ), 0, 1)

tole = np.linspace(1.0e-1, 1.0e-7, 8)

tolerance = []
for i in tole:
    #This is the generic integrate function for later
    def integrate(f, a, b, args=(), tol=i):
        return sit.romberg(f, a, b, args=args, tol=tol)

    def integral_tpl():

        def integral_1(x):

            def integral_2(y):

                def integral_3(z):
                    return (1.0)/(1.0+x**2+y**2+z**2)

                a,b = 0.0, np.sqrt(abs(1.0-x**2-y**2))
                return integrate(integral_3, a, b)

            a,b = 0.0, np.sqrt(abs(1-x**2))
            return integrate(integral_2, a, b)

        return integrate(integral_1, 0.0, 1.0)

    print(integral_tpl())

    integral_tpl()
    tolerance.append(i)
print(tolerance)
